{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["\r\n\r\nObject.defineProperty(Array.prototype, 'randomElement', {\r\n    value: function () {\r\n        return this.length ? this[Math.floor(Math.random() * this.length)] : undefined;\r\n    }\r\n});\r\nObject.defineProperty(Array.prototype, 'shuffle', {\r\n    value: function () {\r\n        // Knuth shuffle https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\r\n        for (let i = this.length; i > 0;) {\r\n            const j = Math.floor(Math.random() * i);\r\n            --i;\r\n            const tmp = this[i];\r\n            this[i] = this[j];\r\n            this[j] = tmp;\r\n        }\r\n        return this;\r\n    }\r\n});\r\nlet addMorePairs = true\r\nconst gameNum = 0;\r\nconst games = [\r\n    { r: 4, c: 4, l: 2 },\r\n    { r: 6, c: 6, l: 5 },\r\n    { r: 10, c: 10, l: 10 }\r\n]\r\nlet timerHandle: number | undefined = undefined\r\n// Hack\r\nlet blockClick: boolean = false;\r\n\r\nconst reactionTimes: number[] = []\r\n\r\nfunction histogram(data: number[], nBins: number, binWidth : number):  number[] {\r\n\r\n\r\n    const hist = new Array<number>(nBins).fill(0);    // @ts-ignore\r\n\r\n    for (const v of data) {\r\n        const binNum = Math.floor(v / binWidth)\r\n        if (binNum >= 0 && binNum < nBins)\r\n            ++hist[binNum];\r\n    }\r\n\r\n    return hist\r\n}\r\n\r\nfunction plotHistogram(containerEl: HTMLDivElement, data: number[]) {\r\n    const dataMax = Math.max(...data)\r\n\r\n    const nBins = 60\r\n    // make chart a whole multiple of 10 seconds.\r\n    // binWidth is a whole number of seconds in milliseconds\r\n    const binWidth = 1_000 * (Math.floor(dataMax / 60_000) + 1)\r\n    const hist = histogram(data, nBins, binWidth)\r\n    const maxHistValue = Math.max(...hist)\r\n    // Clear the container\r\n    containerEl.innerHTML = \"\";\r\n    // Create a reaction time bar chart, with .5s per column from 0s to max(30, histInfo.max)\r\n    const chart = document.createElement('div');\r\n    chart.className = 'chart';  // CSS class\r\n    chart.style.gridTemplateColumns = `repeat(${nBins}, 5px)`;\r\n    containerEl.appendChild(chart);\r\n\r\n    for (let i = 0; i < nBins; ++i) {\r\n            const bar = document.createElement('div');\r\n            bar.className = 'bar';\r\n            bar.style.height = `${hist[i] / maxHistValue * 100}px`;\r\n            bar.style.gridColumn = `${i + 1}`;\r\n            bar.style.gridRow = '1';\r\n            bar.style.transform = `translateY(${100 - hist[i] / maxHistValue * 100}px)`;\r\n\r\n            chart.appendChild(bar);\r\n            // if (i % 10 == 0) {\r\n            //     const xLabel = document.createElement('div');\r\n            //     xLabel.className = 'x-label';\r\n            //     xLabel.style.gridRow = '2';\r\n            //     xLabel.style.gridColumn = `${i + 1} / span 10`\r\n            //     xLabel.innerText = `${i}`;\r\n            //     chart.appendChild(xLabel);\r\n            // }\r\n\r\n\r\n\r\n     }\r\n    // Add x-axis labels\r\n    // const xLabels = document.createElement('div');\r\n    // xLabels.className = 'x-labels';\r\n    // containerEl.appendChild(xLabels);\r\n    // for (let i = 0; i < histInfo.hist.length; ++i) {\r\n    //     const label = document.createElement('div');\r\n    //     label.className = 'x-label';\r\n    //     label.style.width = `${barWidth}%`;\r\n    //     label.style.left = `${i * barWidth}%`;\r\n    //     label.innerText = `${(i * histInfo.max / histInfo.hist.length / 1000).toFixed(0)}`\r\n    //     xLabels.appendChild(label);\r\n    // }\r\n\r\n}\r\nfunction makeGame(rows: number, cols: number, numPairs: number, pairSize = 2, pairsPerTimeout = 2, timeoutMs = 3000) {\r\n    const grid_len = rows * cols\r\n    // create a grid\r\n    const grid: number[] = new Array<number>(grid_len).fill(0)\r\n\r\n    let lastMatchTime = 0;\r\n    let numMatches = 0;\r\n    let matchingCells: HTMLDivElement[] = [];\r\n    const i2rc = (i: number): [number, number] => [ Math.floor(i / rows), i % rows]\r\n\r\n    const getGridIndexWithFewestTiles = (): number => {\r\n        const p: { i: number, h: number}[] = [];\r\n        for (let i = 0;  i < grid_len; ++i)\r\n            p.push({i: i, h: grid[i]} )\r\n        p.sort((a, b) => a.h - b.h)\r\n        let h = p[0].h\r\n        const lp: number[] = []\r\n        lp.push(p[0].i)\r\n        for (let j = 1; j < grid_len; ++j)\r\n            if (p[j].h > h)\r\n                break;\r\n            else {\r\n                lp.push(p[j].i)\r\n            }\r\n\r\n        // @ts-ignore\r\n        return lp.shuffle()[0]\r\n\r\n    }\r\n    const makeTileAtIndex = (i: number): void => {\r\n\r\n        // Images must always be unique\r\n        if (emoji_idx > emojis.length-1)\r\n            return;\r\n\r\n        const sz = Math.floor(600 / cols);\r\n        const fsz = Math.floor(sz / 2);\r\n        const h = grid[i]\r\n        const v: string = emojis[emoji_idx];\r\n\r\n        const comparator = set === emojiImgs  ?\r\n            (a: HTMLDivElement, b: HTMLDivElement) => (<HTMLImageElement>(a.firstElementChild)).src === (<HTMLImageElement>(b.firstElementChild)).src\r\n            : (a: HTMLDivElement, b: HTMLDivElement) => a.innerText === b.innerText\r\n        // https://stackoverflow.com/questions/48419167/how-to-convert-one-emoji-character-to-unicode-codepoint-number-in-javascript\r\n        // @ts-ignore\r\n        console.log([...v].map(e => e.codePointAt(0).toString(16)).join(`-`)) // gives correctly 1f469-200d-2695-fe0\r\n        const cellElement = document.createElement('div');\r\n        const [r, c] = i2rc(i)\r\n\r\n        ++grid[i];\r\n\r\n        cellElement.classList.add('tile')\r\n        cellElement.style.zIndex = `${1000 + h}`\r\n        cellElement.id = `${i2rc(i)}-${h}`;\r\n        if (set === emojiImgs)\r\n            cellElement.innerHTML = `<img src=\"imgs/${v}.png\" width=${sz} height=${sz}>`\r\n        else\r\n            cellElement.innerText = v\r\n        cellElement.style.left = c * sz + \"px\"\r\n        cellElement.style.top = r * sz + \"px\"\r\n        cellElement.style.width = sz + \"px\"\r\n        cellElement.style.height = sz + \"px\"\r\n        cellElement.style.fontSize = fsz + \"pt\"\r\n        cellElement.style.animation = \"fade-in .2s, move-in .3s, grow .3s\";\r\n        deckElement.appendChild(cellElement);\r\n\r\n        cellElement.ontransitionend = () => {\r\n            if (cellElement.classList.contains('rotateOut')) {\r\n                cellElement.remove();\r\n                --grid[i];\r\n            } else\r\n                cellElement.classList.remove(\"rotateBack\");\r\n\r\n        }\r\n        cellElement.addEventListener('click', () => {\r\n            if (blockClick)\r\n                return;\r\n\r\n            if (matchingCells.length == 0) {\r\n                cellElement.classList.add(\"selected\");\r\n                matchingCells.push(cellElement)\r\n            } else if (!matchingCells.includes(cellElement) && comparator(cellElement, matchingCells[0])) {\r\n\r\n\r\n                matchingCells.push(cellElement)\r\n                cellElement.classList.add(\"selected\");\r\n                if (++numMatches == pairSize-1) {\r\n                    if (lastMatchTime != 0) {\r\n                        const elapsed = Date.now() - lastMatchTime;\r\n\r\n                        reactionTimes.push(elapsed)\r\n                        if (reactionTimes.length > 0) {\r\n                            (document.querySelector('.mean-reaction-time') as HTMLDivElement).innerText = `Mean reaction time: ${(reactionTimes.reduce((a, b) => a + b) / reactionTimes.length / 1000).toFixed(1)}`\r\n                            plotHistogram(document.querySelector('.histogram') as HTMLDivElement, reactionTimes)\r\n                        }\r\n                    }\r\n                    lastMatchTime = Date.now();\r\n                    numMatches = 0;\r\n                    score -= 1;\r\n                    audioEl.pause();\r\n                    audioEl.currentTime = 0\r\n                    audioEl.play();\r\n                    clearInterval(timerHandle);\r\n                    if (addMorePairs)\r\n                        timerHandle = setInterval(() => {\r\n                            blockClick = true;\r\n                            for (let np = 0; np < pairsPerTimeout; ++np)\r\n                                dealPair(pairSize);\r\n                            blockClick = false;\r\n\r\n                        }, timeoutMs)\r\n                    scoreEl.innerHTML = score.toFixed(0)\r\n\r\n                    for (const cell of matchingCells)\r\n                        cell.classList.add('rotateOut')\r\n                    matchingCells = []\r\n\r\n                }\r\n            } else {\r\n                for (const cell of matchingCells) {\r\n                    cell.classList.remove(\"selected\");\r\n                    cell.classList.add('rotateBack')\r\n                }\r\n                matchingCells = []\r\n                numMatches = 0;\r\n                cellElement.classList.add(\"rotateBack\");\r\n\r\n            }\r\n\r\n        })\r\n\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    const dealPair = (n: number) => {\r\n\r\n        const tileIndices: number[] = [] // Value is irrelevant, gets set in do loop\r\n        // Add a tile at lowest pile\r\n        tileIndices.push(getGridIndexWithFewestTiles())\r\n        let tempIndex = 0; // Value is irrelevant, gets set in do loop\r\n\r\n        for (let i = 0; i < n-1; ++i) {\r\n            // Add a matching tile anywhere except on the same grid location as the first tile\r\n            do {\r\n                tempIndex = Math.floor(Math.random() * grid_len)\r\n            } while (tileIndices.includes(tempIndex));\r\n            tileIndices.push(tempIndex)\r\n        }\r\n        for (const gridIndex of tileIndices)\r\n            makeTileAtIndex(gridIndex)\r\n        ++emoji_idx;\r\n        ++score;\r\n        scoreEl.innerHTML = score.toFixed(0)\r\n\r\n\r\n\r\n\r\n    }\r\n    const deal = () => {\r\n        // Make the background\r\n        // for (let i = 0; i < grid_len; ++i)\r\n        //     makeTileAtIndex(i, true);\r\n        let pair = 0;\r\n        const to = setInterval(() => {\r\n            if (pair++ < numPairs)\r\n                dealPair(pairSize);\r\n            else\r\n                clearInterval(to)\r\n        }, 100)\r\n        // for (let pair = 0; pair < numPairs; ++pair)\r\n        //     dealPair();\r\n\r\n    }\r\n\r\n    // const set = allEmojis\r\n    const set = emojiImgs\r\n\r\n    // @ts-ignore\r\n    // const emojis = set.slice(0,100).shuffle()\r\n    const emojis = set.shuffle()\r\n    let emoji_idx = 0;\r\n\r\n    let score = 0\r\n\r\n    const layers : string[][] = []\r\n    // let elToMatch: HTMLDivElement | undefined = undefined\r\n\r\n    const scoreEl= document.querySelector('#score') as HTMLDivElement;\r\n    const containerEl = document.querySelector('#container') as HTMLDivElement;\r\n    const audioEl = document.querySelector('audio') as HTMLAudioElement;\r\n\r\n    // Make deck\r\n    scoreEl.innerHTML = score.toFixed(0)\r\n    const deckElement = document.createElement('div');\r\n    deckElement.className = 'deck';\r\n    containerEl.appendChild(deckElement);\r\n\r\n\r\n    deal();\r\n\r\n\r\n}\r\n\r\nmakeGame(8, 8, 100, 3, 3, 350000);\r\n\r\n\r\n\r\n"]}