{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["\r\n\r\nObject.defineProperty(Array.prototype, 'randomElement', {\r\n    value: function () {\r\n        return this.length ? this[Math.floor(Math.random() * this.length)] : undefined;\r\n    }\r\n});\r\nObject.defineProperty(Array.prototype, 'shuffle', {\r\n    value: function () {\r\n        // Knuth shuffle https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\r\n        for (let i = this.length; i > 0;) {\r\n            const j = Math.floor(Math.random() * i);\r\n            --i;\r\n            const tmp = this[i];\r\n            this[i] = this[j];\r\n            this[j] = tmp;\r\n        }\r\n        return this;\r\n    }\r\n});\r\nlet addMorePairs = true\r\nconst gameNum = 0;\r\nconst games = [\r\n    { r: 4, c: 4, l: 2 },\r\n    { r: 6, c: 6, l: 5 },\r\n    { r: 10, c: 10, l: 10 }\r\n]\r\nlet timerHandle: number | undefined = undefined\r\n// Hack\r\nlet blockClick: boolean = false;\r\nfunction makeGame(rows: number, cols: number, numPairs: number, pairsPerTimeout = 2, timeoutMs = 3000) {\r\n    const grid_len = rows * cols\r\n    // create a grid\r\n    const grid: number[] = new Array<number>(grid_len).fill(0)\r\n\r\n    const i2rc = (i: number): [number, number] => [ Math.floor(i / rows), i % rows]\r\n\r\n    const getGridIndexWithFewestTiles = (): number => {\r\n        const p: { i: number, h: number}[] = [];\r\n        for (let i = 0;  i < grid_len; ++i)\r\n            p.push({i: i, h: grid[i]} )\r\n        p.sort((a, b) => a.h - b.h)\r\n        let h = p[0].h\r\n        const lp: number[] = []\r\n        lp.push(p[0].i)\r\n        for (let j = 1; j < grid_len; ++j)\r\n            if (p[j].h > h)\r\n                break;\r\n            else {\r\n                lp.push(p[j].i)\r\n            }\r\n\r\n        // @ts-ignore\r\n        return lp.shuffle()[0]\r\n\r\n    }\r\n    const makeTileAtIndex = (i: number, isBackGroundTile = false): void => {\r\n\r\n        // Images must always be unique\r\n        if (!isBackGroundTile && emoji_idx > emojis.length-1)\r\n            return;\r\n\r\n        const sz = 120;\r\n        const fsz = 64;\r\n        const h = grid[i]\r\n        const v: string = isBackGroundTile? \"\" : emojis[emoji_idx];\r\n        const cellElement = document.createElement('div');\r\n        const [r, c] = i2rc(i)\r\n\r\n        ++grid[i];\r\n\r\n        cellElement.classList.add('tile')\r\n        cellElement.style.zIndex = `${1000 + h}`\r\n        cellElement.id = `${i2rc(i)}-${h}`;\r\n        cellElement.innerText = v\r\n        cellElement.style.left = c * sz + \"px\"\r\n        cellElement.style.top = r * sz + \"px\"\r\n        cellElement.style.width = sz + \"px\"\r\n        cellElement.style.height = sz + \"px\"\r\n        cellElement.style.fontSize = fsz + \"pt\"\r\n        cellElement.style.animation = \"fade-in .2s, move-in .3s, grow .3s\";\r\n        deckElement.appendChild(cellElement);\r\n\r\n        cellElement.ontransitionend = () => {\r\n            if (cellElement.classList.contains('rotateOut')) {\r\n                cellElement.remove();\r\n                --grid[i];\r\n            } else\r\n                cellElement.classList.remove(\"rotateBack\");\r\n\r\n        }\r\n        if (!isBackGroundTile)\r\n            cellElement.addEventListener('click', () => {\r\n                if (blockClick)\r\n                    return;\r\n\r\n                if (elToMatch === undefined) {\r\n                    cellElement.classList.add(\"selected\");\r\n                    elToMatch = cellElement\r\n                } else if (cellElement.innerText === elToMatch.innerText && cellElement !== elToMatch) {\r\n                    score -= 1;\r\n                    audioEl.pause();\r\n                    audioEl.currentTime = 0\r\n                    audioEl.play();\r\n                    clearInterval(timerHandle);\r\n                    if (addMorePairs)\r\n                        timerHandle = setInterval(() => {\r\n                            blockClick = true;\r\n                            for (let np = 0; np < pairsPerTimeout; ++np)\r\n                                dealPair();\r\n                            blockClick = false;\r\n\r\n                        }, timeoutMs)\r\n                    scoreEl.innerHTML = score.toFixed(0)\r\n                    elToMatch.classList.add('rotateOut')\r\n                    cellElement.classList.add('rotateOut')\r\n                    elToMatch = undefined;\r\n                } else {\r\n                    cellElement.classList.add(\"rotateBack\");\r\n                    elToMatch.classList.add(\"rotateBack\");\r\n                    elToMatch.classList.remove(\"selected\");\r\n                    elToMatch = undefined;\r\n                }\r\n\r\n            })\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    const dealPair = () => {\r\n        const firstTileIdx = getGridIndexWithFewestTiles()\r\n        let secondTileIndex = 0; // Value is irrelevant, gets set in do loop\r\n\r\n        // Add a tile at lowest pile\r\n        makeTileAtIndex(firstTileIdx)\r\n\r\n        // Add a matching tile anywhere except on the same grid location as the first tile\r\n        do {\r\n            secondTileIndex = Math.floor(Math.random() * grid_len)\r\n        } while (secondTileIndex === firstTileIdx);\r\n        makeTileAtIndex(secondTileIndex)\r\n        ++emoji_idx;\r\n        ++score;\r\n        scoreEl.innerHTML = score.toFixed(0)\r\n\r\n\r\n\r\n\r\n    }\r\n    const deal = () => {\r\n        // Make the background\r\n        for (let i = 0; i < grid_len; ++i)\r\n            makeTileAtIndex(i, true);\r\n        let pair = 0;\r\n        const to = setInterval(() => {\r\n            if (pair++ < numPairs)\r\n                dealPair();\r\n            else\r\n                clearInterval(to)\r\n        }, 100)\r\n        // for (let pair = 0; pair < numPairs; ++pair)\r\n        //     dealPair();\r\n\r\n    }\r\n\r\n    // @ts-ignore\r\n    // const emojis = allEmojis.slice(0,100).shuffle()\r\n    const emojis = allEmojis.shuffle()\r\n    let emoji_idx = 0;\r\n\r\n    let score = 0\r\n\r\n    const layers : string[][] = []\r\n    let elToMatch: HTMLDivElement | undefined = undefined\r\n\r\n    const scoreEl= document.querySelector('#score') as HTMLDivElement;\r\n    const containerEl = document.querySelector('#container') as HTMLDivElement;\r\n    const audioEl = document.querySelector('audio') as HTMLAudioElement;\r\n\r\n    // Make deck\r\n    scoreEl.innerHTML = score.toFixed(0)\r\n    const deckElement = document.createElement('div');\r\n    deckElement.className = 'deck';\r\n    containerEl.appendChild(deckElement);\r\n\r\n\r\n    deal();\r\n\r\n\r\n}\r\n\r\nmakeGame(5, 5, 50, 3, 3000);\r\n\r\n\r\n\r\n"]}