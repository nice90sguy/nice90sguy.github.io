{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAEA,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,eAAe,EAAE;IACpD,KAAK,EAAE;QACH,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACnF,CAAC;CACJ,CAAC,CAAC;AACH,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,EAAE;IAC9C,KAAK,EAAE;QACH,2EAA2E;QAC3E,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;YAC/B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;YACxC,EAAE,CAAC,CAAC;YACJ,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAClB,CAAC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ,CAAC,CAAC;AAwBH,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE;IAChD,KAAK,EACD,UAAa,MAAwB;QACjC,MAAM,UAAU,GAAiB,EAAE,CAAC;QACpC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE,CAAC;YACtB,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC;YACtC,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,SAAS;gBAC3B,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACvB,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;CACR,CAAC,CAAA;AAEF,KAAK,UAAU,IAAI,CAAC,YAAoB,EAAE,GAAa,EAAE,IAAY,EAAE,IAAY,EAAE,cAAsB,EAAE,OAAgB,EAAE,YAAoB,IAAI;IAEnJ,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAmB,CAAC;IAEnE,uIAAuI;IAEvI,iHAAiH;IACjH,IAAI,aAAa,GAAG,CAAC,CAAC;IAEtB,IAAI,aAAa,GAAG,CAAC,CAAC;IAC1B,OAAO;IACH,IAAI,IAAI,GAAY,KAAK,CAAC;IAC1B,IAAI,aAAa,GAAG,CAAC,CAAC;IACtB,IAAI,UAAU,GAAG,CAAC,CAAC;IAInB,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE;QAChC,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAoB,CAAC,SAAS,GAAG,YAAY,CAAC;QAGrF,MAAM,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAA;QAC5B,gBAAgB;QAChB,MAAM,IAAI,GAAa,IAAI,KAAK,CAAS,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAE1D,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,IAAI,aAAa,GAAqB,EAAE,CAAC;QACzC,IAAI,SAAS,GAAqB,EAAE,CAAC,CAAC,2CAA2C;QACjF,MAAM,IAAI,GAAG,CAAC,CAAS,EAAoB,EAAE,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAA;QAE/E,MAAM,2BAA2B,GAAG,GAAW,EAAE;YAC7C,MAAM,CAAC,GAA8B,EAAE,CAAC;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC;gBAC9B,CAAC,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAC,CAAE,CAAA;YAC/B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAC3B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACd,MAAM,EAAE,GAAa,EAAE,CAAA;YACvB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC;gBAC7B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;oBACV,MAAM;qBACL,CAAC;oBACF,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;gBACnB,CAAC;YAEL,aAAa;YACb,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;QAE1B,CAAC,CAAA;QACD,MAAM,QAAQ,GAAE,GAAqB,EAAE;YACnC,MAAM,KAAK,GAAqB,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YACnE,KAAK,MAAM,EAAE,IAAI,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC;gBAClD,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;gBACxC,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;gBAC1B,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAA;gBAChC,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1E,KAAK,CAAC,GAAG,CAAC,GAAG,EAAoB,CAAA;YAEzC,CAAC;YACD,OAAO,KAAK,CAAA;QAChB,CAAC,CAAA;QAED,MAAM,eAAe,GAAG,GAAqB,EAAE;YAC3C,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAA;YACxB,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,SAAS,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAA;YAC/H,aAAa;YACb,MAAM,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAiB,EAAE,EAAE,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAoB,CAAC,CAAC,iBAAkB,CAAC,GAAG,CAAC,CAAA;YAC/I,KAAK,MAAM,GAAG,IAAI,UAAU;gBACxB,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,OAAO;oBACjC,OAAO,UAAU,CAAC,GAAG,CAAC,CAAA;YAC9B,OAAO,EAAE,CAAA;QACb,CAAC,CAAA;QACD,MAAM,oBAAoB,GAAG,CAAC,CAAS,EAAkB,EAAE;YACvD,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAClD,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;YACtB,WAAW,CAAC,SAAS,GAAE,YAAY,CAAA;YACnC,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;YACtC,WAAW,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YAC7B,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAA;YACtC,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAA;YACzC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAChC,OAAO,WAAW,CAAC;QACvB,CAAC,CAAA;QACD,MAAM,eAAe,GAAG,CAAC,CAAS,EAAQ,EAAE;YAExC,+BAA+B;YAC/B,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,GAAC,CAAC;gBAC3B,OAAO;YAEX,MAAM,CAAC,GAAW,MAAM,CAAC,SAAS,CAAC,CAAC;YAEpC,MAAM,UAAU,GAAG,GAAG,KAAK,SAAS,CAAE,CAAC;gBACnC,CAAC,CAAiB,EAAE,CAAiB,EAAE,EAAE,CAAoB,CAAC,CAAC,CAAC,iBAAiB,CAAE,CAAC,GAAG,KAAwB,CAAC,CAAC,CAAC,iBAAiB,CAAE,CAAC,GAAG;gBACzI,CAAC,CAAC,CAAC,CAAiB,EAAE,CAAiB,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS,CAAA;YAC3E,4HAA4H;YAC5H,aAAa;YACb,+GAA+G;YAC/G,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7C,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;YAEtB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YACV,MAAM,MAAM,GAAG,IAAI,GAAG,aAAa,EAAE,CAAC;YACtC,MAAM,CAAC,SAAS,GAAE,MAAM,CAAA;YACxB,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,EAAE,CAAA;YACjC,MAAM,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,MAAM,GAAC,IAAI,EAAE,CAAC;YAClC,IAAI,GAAG,KAAK,SAAS;gBACjB,MAAM,CAAC,SAAS,GAAG,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAA;;gBAEzD,MAAM,CAAC,SAAS,GAAG,CAAC,CAAA;YACxB,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAA;YACjC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAA;YACpC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAA;YAEvC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAE3B,MAAM,CAAC,cAAc,GAAG,GAAG,EAAE;gBACzB,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC,+BAA+B;YAE9D,CAAC,CAAA;YACD,MAAM,CAAC,eAAe,GAAG,GAAG,EAAE;gBAE1B,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC;oBACtC,MAAM,CAAC,MAAM,EAAE,CAAC;;oBAEhB,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC,+BAA+B;YAElE,CAAC,CAAA;YACD,MAAM,CAAC,iBAAiB,GAAG,GAAG,EAAE;gBAC5B,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC;oBACtC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAA;YACD,MAAM,OAAO,GAAG,CAAC,CAAQ,EAAE,EAAE;gBACzB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,IAAI;oBACJ,OAAO;gBACX,IAAI,GAAG,IAAI,CAAC;gBAEZ,KAAK,MAAM,IAAI,IAAI,SAAS,EAAE,CAAC;oBAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAClC,CAAC;gBAED,IAAI,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;oBAC5B,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACjC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;gBAC9B,CAAC;qBAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBAEjF,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3B,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACjC,2BAA2B;oBAC3B,IAAI,EAAE,UAAU,IAAI,OAAO,GAAC,CAAC,EAAE,CAAC;wBAC5B,kBAAkB;wBAClB,oHAAoH;wBACpH,IAAI,KAAK,GAAG,CAAC,CAAC,CAAE,sBAAsB;wBACtC,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,aAAa,CAAC;wBAE/C,IAAI,aAAa,GAAG,IAAI,EAAE,CAAC;4BACvB,KAAK,GAAG,GAAG,CAAC;wBAChB,CAAC;6BAAM,IAAI,aAAa,GAAG,IAAI,EAAE,CAAC;4BAC9B,KAAK,GAAG,EAAE,CAAC;wBACf,CAAC;6BAAM,IAAI,aAAa,GAAG,IAAI,EAAE,CAAC;4BAC9B,KAAK,GAAG,EAAE,CAAC;wBACf,CAAC;;4BACG,KAAK,GAAG,CAAC,CAAC;wBAEd,UAAU,IAAK,KAAK,CAAC;wBAErB,UAAU,GAAG,CAAC,CAAC;wBACf,+BAA+B;wBAC/B,aAAa,IAAI,CAAC,CAAC;wBACnB,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;4BACZ,MAAM,MAAM,GAAG,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAE,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;4BACrH,CAAC,KAAK,IAAI,EAAE,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,CAAA,CAAC,CAAC,CAAC,EAAE,CAAC;4BAClD,2BAA2B;wBAC/B,CAAC;wBAED,OAAO,CAAC,SAAS,GAAG,UAAU,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAA;wBAEpF,KAAK,MAAM,IAAI,IAAI,aAAa;4BAC5B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;wBACnC,aAAa,GAAG,EAAE,CAAA;wBAElB,aAAa,EAAE,CAAC;wBAChB,IAAI,aAAa,KAAK,CAAC,EAAE,CAAC;4BACtB,YAAY;4BACZ,OAAO,EAAE,CAAC;wBACd,CAAC;oBAEL,CAAC;gBACL,CAAC;qBAAM,CAAC;oBACJ,KAAK,MAAM,IAAI,IAAI,aAAa,EAAE,CAAC;wBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;wBAClC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;oBACpC,CAAC;oBACD,aAAa,GAAG,EAAE,CAAA;oBAClB,UAAU,GAAG,CAAC,CAAC;oBACf,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBACvC,CAAC;gBACD,IAAI,GAAG,KAAK,CAAC;YACjB,CAAC,CAAA;YACD,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAA;YAC7C,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAA;YAE9C,OAAO;QAEX,CAAC,CAAA;QAED,MAAM,OAAO,GAAG,CAAC,CAAS,EAAW,EAAE;YAEnC,MAAM,WAAW,GAAa,EAAE,CAAA,CAAC,2CAA2C;YAC5E,4BAA4B;YAC5B,WAAW,CAAC,IAAI,CAAC,2BAA2B,EAAE,CAAC,CAAA;YAC/C,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC,2CAA2C;YAE9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;gBAC3B,0FAA0F;gBAC1F,GAAG,CAAC;oBACA,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAA;gBACpD,CAAC,QAAQ,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBAC1C,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YAC/B,CAAC;YACD,KAAK,MAAM,SAAS,IAAI,WAAW;gBAC/B,eAAe,CAAC,SAAS,CAAC,CAAA;YAC9B,EAAE,SAAS,CAAC;YACZ,EAAE,aAAa,CAAC;YAChB,OAAO,CAAC,SAAS,GAAG,aAAa,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAA;YAC5D,OAAO,WAAW,CAAA;QACtB,CAAC,CAAA;QAED,MAAM,2BAA2B,GAAG,GAAY,EAAE;YAC9C,OAAO,IAAI,CAAC,GAAG,EAAE,GAAG,aAAa,GAAG,SAAS,CAAA;QACjD,CAAC,CAAA;QAED,MAAM,aAAa,GAAG,GAAG,EAAE;YACvB,iDAAiD;YACjD,IAAI,CAAC,2BAA2B,EAAE,EAAE,CAAC;gBAEjC,wEAAwE;gBACxE,QAAQ,CAAC,gBAAgB,CAAiB,YAAY,CAAC;qBAClD,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAEhD,SAAS,GAAG,eAAe,EAAE,CAAA,CAAC,uBAAuB;gBACrD,oHAAoH;gBACpH,KAAK,MAAM,IAAI,IAAI,SAAS;oBACxB,8BAA8B;oBAC9B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YAClC,CAAC;QACL,CAAC,CAAA;QACD,MAAM,IAAI,GAAG,GAAG,EAAE;YACd,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,+BAA+B;YACvE,aAAa,EAAE,CAAC;YAChB,0DAA0D;YAC1D,QAAQ,CAAC,gBAAgB,CAAiB,YAAY,CAAC;iBAClD,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAChD,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,MAAM,EAAE,GAAG,WAAW,CAAC,GAAG,EAAE;gBACxB,IAAI,MAAM,EAAE,GAAG,cAAc;oBACzB,OAAO,CAAC,OAAO,CAAC,CAAC;qBAChB,CAAC;oBACF,aAAa,CAAC,EAAE,CAAC,CAAC;oBAGlB,yBAAyB,CAAC,SAAS,CAAC,CAAC;oBACrC,aAAa,EAAE,CAAC;gBACpB,CAAC;YACL,CAAC,EAAE,EAAE,CAAC,CAAA;YAEN,oDAAoD;YACpD,iBAAiB;QAErB,CAAC,CAAA;QACD,MAAM,aAAa,GAAG,GAAG,EAAE;YACvB,MAAM,QAAQ,GAAG,GAAG,EAAE;gBAClB,aAAa,EAAE,CAAC;gBAChB,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;YACvD,CAAC,CAAA;YACD,IAAI,SAAS,IAAI,CAAC;gBACd,OAAO;YACX,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAgB,CAAC;YAElE,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;YAC1B,KAAK,IAAI,CAAC,WAAW,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACjC,KAAK,IAAI,CAAC,WAAW,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAE9B,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,QAAQ,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;YAC9D,2EAA2E;YAC3E,aAAa,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE/B,CAAC,CAAC;QAEF,MAAM,yBAAyB,GAAG,CAAC,YAAoB,EAAE,EAAE;YACvD,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,mBAAmB,EAAE,GAAG,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC;QAC/F,CAAC,CAAA;QACD,aAAa;QACb,4CAA4C;QAC5C,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,EAAE,CAAA;QAC5B,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAmB,CAAC;QACjE,uFAAuF;QACvF,mFAAmF;QACnF,YAAY;QAEZ,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;QACtB,MAAM,CAAC,KAAK,CAAC,mBAAmB,GAAG,UAAU,IAAI,mBAAmB,CAAC;QACrE,MAAM,CAAC,KAAK,CAAC,gBAAgB,GAAG,UAAU,IAAI,mBAAmB,CAAC;QAClE,MAAM,CAAC,KAAK,CAAC,WAAW,GAAG,GAAG,IAAI,MAAM,IAAI,EAAE,CAAC,CAAC,2BAA2B;QAC3E,wBAAwB;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC;YAChC,oBAAoB,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC;QACD,IAAI,EAAE,CAAC;IAGX,CAAC,CAAC,CAAC;AACP,CAAC;AAED,MAAM,GAAG,GAAG,IAAI,YAAY,CAAE,EAAC,WAAW,EAAE,UAAU,EAAE,CAAC,CAAC;AAE1D,IAAI,kBAA+B,CAAC;AACpC,IAAI,oBAAiC,CAAC;AACtC,IAAI,yBAAsC,CAAC;AAC3C,KAAK,UAAU,sBAAsB,CAAC,QAAgB;IAClD,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,CAAC;IACnC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;IACvC,OAAO,MAAM,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAC5C,CAAC;AAED,KAAK,UAAU,eAAe,CAAC,MAAmB;IAC9C,IAAI,GAAG,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;QAC1B,MAAM,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,0BAA0B;IAClD,CAAC;IACD,MAAM,GAAG,GAAG,GAAG,CAAC,kBAAkB,EAAE,CAAC;IACrC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;IACpB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAE7B,UAAU,CAAC,GAAG,EAAE;QACZ,GAAG,CAAC,KAAK,EAAE,CAAC;IAChB,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE;QACjC,GAAG,CAAC,OAAO,GAAG,GAAG,EAAE;YACf,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC;AAED,6EAA6E;AAC7E,wBAAwB;AACxB,MAAM,GAAG,GAAG,SAAS,CAAC;AAEtB,CAAC,KAAK,IAAI,EAAE;IACZ,aAAa;IACT,kBAAkB,GAAG,MAAM,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;IACzE,oBAAoB,GAAG,MAAM,sBAAsB,CAAC,uBAAuB,CAAC,CAAC;IAC7E,yBAAyB,GAAG,MAAM,sBAAsB,CAAC,4BAA4B,CAAC,CAAC;IAEvF,MAAM,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,MAAM,CAAC,CAAC;IACvD,MAAM,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,MAAM,CAAC,CAAC;IACvD,MAAM,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,MAAM,CAAC,CAAC;IAC/D,MAAM,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAG,MAAM,CAAC,CAAC;IACxD,MAAM,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAG,MAAM,CAAC,CAAC;IAChE,MAAM,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAG,MAAM,CAAC,CAAC;IAChE,MAAM,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAG,MAAM,CAAC,CAAC;AACpE,CAAC,CAAC,EAAE,CAAC","sourcesContent":["\r\n\r\nObject.defineProperty(Array.prototype, 'randomElement', {\r\n    value: function () {\r\n        return this.length ? this[Math.floor(Math.random() * this.length)] : undefined;\r\n    }\r\n});\r\nObject.defineProperty(Array.prototype, 'shuffle', {\r\n    value: function () {\r\n        // Knuth shuffle https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\r\n        for (let i = this.length; i > 0;) {\r\n            const j = Math.floor(Math.random() * i);\r\n            --i;\r\n            const tmp = this[i];\r\n            this[i] = this[j];\r\n            this[j] = tmp;\r\n        }\r\n        return this;\r\n    }\r\n});\r\n\r\n/**\r\n * Partition an array according to a partition function.\r\n * The partition function is of the form (elem: T, index?: number, array?: Array<T>) => string | number\r\n * and returns a key value for the item.\r\n * Returns an object whose properties are the partitioned keys.  The value of these properties\r\n * is an array of items belonging to the partition.\r\n * @example\r\n `const lookup: { [key: string]: string; } =\r\n {H: 'Hearts', D: 'Diamonds', S: 'Spades', C: 'Clubs' };\r\n ['4H', 'KD', '3S', 'AS', '9H'].partition( (e: string) => lookup[e[1]]);`\r\n\r\n { Hearts: [\"4H\", \"9H\"], Diamonds: [\"KD\"], Spades: [\"3S\", \"AS\"] }\r\n\r\n * @param filter A PartitionFunc\r\n */\r\n\r\ntype Partition<T> = {\r\n    [Key in string | number]: Array<T>;\r\n};\r\n\r\ntype PartitionFunc<T> = (item: T, index?: number, array?: Array<T>) => string | number\r\n\r\nObject.defineProperty(Array.prototype, 'partition', {\r\n    value:\r\n        function <T>(filter: PartitionFunc<T>) {\r\n            const partitions: Partition<T> = {};\r\n            let index = 0;\r\n            for (const item of this) {\r\n                const k = filter(item, index++, this);\r\n                if (partitions[k] === undefined)\r\n                    partitions[k] = [];\r\n                partitions[k].push(item);\r\n            }\r\n            return partitions;\r\n        }\r\n})\r\n\r\nasync function game(instructions: string, set: string[], cols: number, rows: number, numInitialSets: number, setSize : number, timeoutMs: number = 3000) {\r\n\r\n    const scoreEl = document.querySelector('#score') as HTMLDivElement;\r\n\r\n    // const timeoutActionType: \"hint\" | \"add\" | \"remove\" = setsToAddPerTimeout === 0 ? \"hint\" : setsToAddPerTimeout > 0 ? \"add\" : \"remove\"\r\n\r\n    // let foundAtLeastOneMatch = false; // We don't do the timeout action until the after the first successful match\r\n    let setsRemaining = 0;\r\n\r\n    let lastMatchTime = 0;\r\n// Hack\r\n    let lock: boolean = false;\r\n    let numTilesDealt = 0;\r\n    let totalScore = 0;\r\n\r\n\r\n\r\n    return new Promise<void>((resolve) => {\r\n        (document.querySelector('#instructions') as HTMLDivElement).innerHTML = instructions;\r\n\r\n\r\n        const grid_len = cols * rows\r\n        // create a grid\r\n        const grid: number[] = new Array<number>(grid_len).fill(0)\r\n\r\n        let numMatches = 0;\r\n\r\n        let matchingCells: HTMLDivElement[] = [];\r\n        let hintCells: HTMLDivElement[] = []; // Cells that are currently being hinted at\r\n        const i2rc = (i: number): [number, number] => [ Math.floor(i / cols), i % cols]\r\n\r\n        const getGridIndexWithFewestTiles = (): number => {\r\n            const p: { i: number, h: number}[] = [];\r\n            for (let i = 0;  i < grid_len; ++i)\r\n                p.push({i: i, h: grid[i]} )\r\n            p.sort((a, b) => a.h - b.h)\r\n            let h = p[0].h\r\n            const lp: number[] = []\r\n            lp.push(p[0].i)\r\n            for (let j = 1; j < grid_len; ++j)\r\n                if (p[j].h > h)\r\n                    break;\r\n                else {\r\n                    lp.push(p[j].i)\r\n                }\r\n\r\n            // @ts-ignore\r\n            return lp.shuffle()[0]\r\n\r\n        }\r\n        const topTiles =(): HTMLDivElement[] => {\r\n            const tiles: HTMLDivElement[] = new Array(grid_len).fill(undefined)\r\n            for (const el of document.querySelectorAll('.tile')) {\r\n                const [locS, zIndexS] = el.id.split('-')\r\n                const loc = parseInt(locS)\r\n                const zIndex = parseInt(zIndexS)\r\n                if (tiles[loc] === undefined || zIndex > parseInt(tiles[loc].id.split('-')[1]))\r\n                    tiles[loc] = el as HTMLDivElement\r\n\r\n            }\r\n            return tiles\r\n        }\r\n\r\n        const findAVisibleSet = (): HTMLDivElement[] => {\r\n            const tiles = topTiles()\r\n            const visibleTiles = tiles.filter(t => t !== undefined && !t.classList.contains('dummy') && !t.classList.contains('rotateOut'))\r\n            // @ts-ignore\r\n            const partitions = visibleTiles.partition((t: HTMLDivElement) => set !== emojiImgs ? t.innerText : (<HTMLImageElement>t.firstElementChild).src)\r\n            for (const key in partitions)\r\n                if (partitions[key].length >= setSize)\r\n                    return partitions[key]\r\n            return []\r\n        }\r\n        const makeDummyTileAtIndex = (i: number): HTMLDivElement => {\r\n            const dummyTileEl = document.createElement('div');\r\n            const [r, c] = i2rc(i)\r\n            dummyTileEl.className ='tile dummy'\r\n            dummyTileEl.style.zIndex = -1000 + '';\r\n            dummyTileEl.id = `${i}-${0}`;\r\n            dummyTileEl.style.gridRow = `${r + 1}`\r\n            dummyTileEl.style.gridColumn = `${c + 1}`\r\n            deckEl.appendChild(dummyTileEl);\r\n            return dummyTileEl;\r\n        }\r\n        const makeTileAtIndex = (i: number): void => {\r\n\r\n            // Images must always be unique\r\n            if (emoji_idx > emojis.length-1)\r\n                return;\r\n\r\n            const v: string = emojis[emoji_idx];\r\n\r\n            const comparator = set === emojiImgs  ?\r\n                (a: HTMLDivElement, b: HTMLDivElement) => (<HTMLImageElement>(a.firstElementChild)).src === (<HTMLImageElement>(b.firstElementChild)).src\r\n                : (a: HTMLDivElement, b: HTMLDivElement) => a.innerText === b.innerText\r\n            // https://stackoverflow.com/questions/48419167/how-to-convert-one-emoji-character-to-unicode-codepoint-number-in-javascript\r\n            // @ts-ignore\r\n            // console.log([...v].map(e => e.codePointAt(0).toString(16)).join(`-`)) // gives correctly 1f469-200d-2695-fe0\r\n            const tileEl = document.createElement('div');\r\n            const [r, c] = i2rc(i)\r\n\r\n            ++grid[i];\r\n            const zIndex = 1000 + numTilesDealt++;\r\n            tileEl.className ='tile'\r\n            tileEl.style.zIndex = `${zIndex}`\r\n            tileEl.id = `${i}-${zIndex-1000}`;\r\n            if (set === emojiImgs)\r\n                tileEl.innerHTML = `<img src=\"imgs/${v}.png\" alt=\"${v}\">`\r\n            else\r\n                tileEl.innerText = v\r\n            tileEl.style.gridRow = `${r + 1}`\r\n            tileEl.style.gridColumn = `${c + 1}`\r\n            tileEl.classList.add('fade-in', 'grow')\r\n\r\n            deckEl.appendChild(tileEl);\r\n\r\n            tileEl.onanimationend = () => {\r\n                tileEl.className = 'tile'; // Remove all animation classes\r\n\r\n            }\r\n            tileEl.ontransitionend = () => {\r\n\r\n                if (tileEl.classList.contains('rotateOut'))\r\n                    tileEl.remove();\r\n                else\r\n                    tileEl.className = 'tile'; // Remove all animation classes\r\n\r\n            }\r\n            tileEl.ontransitionstart = () => {\r\n                if (tileEl.classList.contains('rotateOut'))\r\n                    --grid[i];\r\n            }\r\n            const touched = (e: Event) => {\r\n                e.preventDefault();\r\n                if (lock)\r\n                    return;\r\n                lock = true;\r\n\r\n                for (const cell of hintCells) {\r\n                    cell.classList.remove('hint');\r\n                }\r\n\r\n                if (matchingCells.length == 0) {\r\n                    tileEl.classList.add(\"selected\");\r\n                    matchingCells.push(tileEl)\r\n                } else if (!matchingCells.includes(tileEl) && comparator(tileEl, matchingCells[0])) {\r\n\r\n                    matchingCells.push(tileEl);\r\n                    tileEl.classList.add(\"selected\");\r\n                    // Check if we have a match\r\n                    if (++numMatches == setSize-1) {\r\n                        // We have a match\r\n                        // foundAtLeastOneMatch = true;  // Only need to set this once in the game, but no harm in setting it multiple times\r\n                        let score = 0;  // No score if timeout\r\n                        let msToFindMatch = Date.now() - lastMatchTime;\r\n\r\n                        if (msToFindMatch < 1000) {\r\n                            score = 100;\r\n                        } else if (msToFindMatch < 3000) {\r\n                            score = 25;\r\n                        } else if (msToFindMatch < 5000) {\r\n                            score = 10;\r\n                        } else\r\n                            score = 0;\r\n\r\n                        totalScore +=  score;\r\n\r\n                        numMatches = 0;\r\n                        // foundAtLeastOneMatch = true;\r\n                        setsRemaining -= 1;\r\n                        if (score > 0) {\r\n                            const buffer = score == 100 ? matchExcellentAudioBuffer : ( score == 25 ? matchGoodAudioBuffer : matchOkAudioBuffer);\r\n                            (async () => { await playAudioBuffer(buffer) })();\r\n                            // playAudioBuffer(buffer);\r\n                        }\r\n\r\n                        scoreEl.innerHTML = `Score: ${totalScore.toFixed(0)}  (${setsRemaining.toFixed(0)})`\r\n\r\n                        for (const cell of matchingCells)\r\n                            cell.classList.add('rotateOut')\r\n                        matchingCells = []\r\n\r\n                        resetTimerBar();\r\n                        if (setsRemaining === 0) {\r\n                            // Game over\r\n                            resolve();\r\n                        }\r\n\r\n                    }\r\n                } else {\r\n                    for (const cell of matchingCells) {\r\n                        cell.classList.remove(\"selected\");\r\n                        cell.classList.add('rotateBack')\r\n                    }\r\n                    matchingCells = []\r\n                    numMatches = 0;\r\n                    tileEl.classList.add(\"rotateBack\");\r\n                }\r\n                lock = false;\r\n            }\r\n            tileEl.addEventListener('mousedown', touched)\r\n            tileEl.addEventListener('touchstart', touched)\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        const dealSet = (n: number):number[] => {\r\n\r\n            const tileIndices: number[] = [] // Value is irrelevant, gets set in do loop\r\n            // Add a tile at lowest pile\r\n            tileIndices.push(getGridIndexWithFewestTiles())\r\n            let tempIndex = 0; // Value is irrelevant, gets set in do loop\r\n\r\n            for (let i = 0; i < n-1; ++i) {\r\n                // Add a matching tile anywhere except on the same grid location as any of the other tiles\r\n                do {\r\n                    tempIndex = Math.floor(Math.random() * grid_len)\r\n                } while (tileIndices.includes(tempIndex));\r\n                tileIndices.push(tempIndex)\r\n            }\r\n            for (const gridIndex of tileIndices)\r\n                makeTileAtIndex(gridIndex)\r\n            ++emoji_idx;\r\n            ++setsRemaining;\r\n            scoreEl.innerHTML = `Score: 0 (${setsRemaining.toFixed(0)})`\r\n            return tileIndices\r\n        }\r\n\r\n        const userFoundMatchBeforeTimeout = (): boolean => {\r\n            return Date.now() - lastMatchTime < timeoutMs\r\n        }\r\n\r\n        const timeoutAction = () => {\r\n            // Find a set of tiles and animate them as a hint\r\n            if (!userFoundMatchBeforeTimeout()) {\r\n\r\n                // HACK (shouldn't occur) - remove any tiles still with the \"hint\" class\r\n                document.querySelectorAll<HTMLDivElement>('.tile.hint')\r\n                    .forEach(el => el.classList.remove('hint'));\r\n\r\n                hintCells = findAVisibleSet() // will always find one\r\n                // console.assert(s.length >= setSize, \"There should always be a set of size \" + setSize + \" visible at this point\")\r\n                for (const cell of hintCells)\r\n                    // console.log(cell.classList)\r\n                    cell.classList.add('hint')\r\n            }\r\n        }\r\n        const deal = () => {\r\n            setTimerBarTransitionTime(864_000_000); // 1 day, so it doesn't animate\r\n            resetTimerBar();\r\n            // remove any tiles that were hinted at in a previous game\r\n            document.querySelectorAll<HTMLDivElement>('.tile.hint')\r\n                .forEach(el => el.classList.remove('hint'));\r\n            let setNum = 0;\r\n            const to = setInterval(() => {\r\n                if (setNum++ < numInitialSets)\r\n                    dealSet(setSize);\r\n                else {\r\n                    clearInterval(to);\r\n\r\n\r\n                    setTimerBarTransitionTime(timeoutMs);\r\n                    resetTimerBar();\r\n                }\r\n            }, 50)\r\n\r\n            // for (let setNum = 0; set < numInitialSets; ++set)\r\n            //     dealSet();\r\n\r\n        }\r\n        const resetTimerBar = () => {\r\n            const onBarEnd = () => {\r\n                timeoutAction();\r\n                fill.removeEventListener('animationend', onBarEnd);\r\n            }\r\n            if (timeoutMs <= 0)\r\n                return;\r\n            const fill = document.querySelector('.timer-fill') as HTMLElement;\r\n\r\n            fill.removeEventListener('animationend', onBarEnd);\r\n            fill.style.animation = '';\r\n            void fill.offsetWidth;\r\n            fill.classList.remove('animate');\r\n            void fill.offsetWidth;\r\n            fill.classList.add('animate');\r\n\r\n            fill.addEventListener('animationend', onBarEnd, {once: true});\r\n            // fill.addEventListener('animationend', () => alert(\"Foo\"), {once: true});\r\n            lastMatchTime = Date.now();\r\n\r\n        };\r\n\r\n        const setTimerBarTransitionTime = (milliSeconds: number) => {\r\n            document.documentElement.style.setProperty('--TRANSITION_TIME', `${milliSeconds / 1000}s`);\r\n        }\r\n        // @ts-ignore\r\n        // const emojis = set.slice(0,100).shuffle()\r\n        const emojis = set.shuffle()\r\n        let emoji_idx = 0;\r\n\r\n        const deckEl = document.querySelector('.deck') as HTMLDivElement;\r\n        // const audioElGood = document.querySelector('#audio_match_good') as HTMLAudioElement;\r\n        // const audioElOk = document.querySelector('#audio_match_ok') as HTMLAudioElement;\r\n        // Make deck\r\n\r\n        deckEl.innerHTML = \"\";\r\n        deckEl.style.gridTemplateColumns = `repeat(${cols}, minmax(0, 1fr))`;\r\n        deckEl.style.gridTemplateRows = `repeat(${rows}, minmax(0, 1fr))`;\r\n        deckEl.style.aspectRatio = `${cols} / ${rows}`; // Set aspect ratio of deck\r\n        // fill with dummy tiles\r\n        for (let i = 0; i < grid_len; ++i) {\r\n            makeDummyTileAtIndex(i);\r\n        }\r\n        deal();\r\n\r\n\r\n    });\r\n}\r\n\r\nconst ctx = new AudioContext( {latencyHint: 'playback' });\r\n\r\nlet matchOkAudioBuffer: AudioBuffer;\r\nlet matchGoodAudioBuffer: AudioBuffer;\r\nlet matchExcellentAudioBuffer: AudioBuffer;\r\nasync function getAudioBufferFromFile(fileName: string) {\r\n    const resp = await fetch(fileName);\r\n    const array = await resp.arrayBuffer();\r\n    return await ctx.decodeAudioData(array);\r\n}\r\n\r\nasync function playAudioBuffer(buffer: AudioBuffer) {\r\n    if (ctx.state !== \"running\") {\r\n        await ctx.resume(); // Ensures context is live\r\n    }\r\n    const src = ctx.createBufferSource();\r\n    src.buffer = buffer;\r\n    src.connect(ctx.destination);\r\n\r\n    setTimeout(() => {\r\n        src.start();\r\n    }, 0);\r\n    return new Promise<void>((resolve) => {\r\n        src.onended = () => {\r\n            resolve();\r\n        };\r\n    });\r\n}\r\n\r\n// Call init() on startup, then playChimeBuffer() whenever you need the chime\r\n// const set = allEmojis\r\nconst set = emojiImgs;\r\n\r\n(async () => {\r\n// Init audio\r\n    matchOkAudioBuffer = await getAudioBufferFromFile('/audio/match_ok.mp3');\r\n    matchGoodAudioBuffer = await getAudioBufferFromFile('/audio/match_good.mp3');\r\n    matchExcellentAudioBuffer = await getAudioBufferFromFile('/audio/match_excellent.mp3');\r\n\r\n    await game(\"Match  pairs.\", set, 4, 6, 24, 2,  30_000);\r\n    await game(\"Match  pairs!\", set, 5, 8, 40, 2,  30_000);\r\n    await game(\"Match  sets of three!\", set, 5, 8, 80, 3,  30_000);\r\n    await game(\"Match pairs!\", set, 7, 10, 100, 2,  60_000);\r\n    await game(\"Match sets of three!\", set, 7, 10, 100, 3,  60_000);\r\n    await game(\"Match sets of three!\", set, 7, 11, 100, 3,  60_000);\r\n    await game(\"Match sets of three!\", set, 8, 12, 200, 3,  60_000);\r\n})();\r\n\r\n"]}